# ============================================
# サンプル: パケットエンティティの使用例
# ============================================
# PacketEntityを使用したMob定義

# 基本的なパケットエンティティMob
BasicPacketZombie:
  Type: ZOMBIE
  Display: '&cパケットゾンビ'
  Health: 100

  # パケットエンティティの特徴:
  # - サーバー負荷が軽い
  # - 非同期操作が可能
  # - AIなしでも動かせる
  # - プレイヤーごとに表示制御可能

---

# カスタマイズされたパケットMob
CustomPacketMob:
  Type: SKELETON
  Display: '&6カスタムスケルトン'
  Health: 150
  Damage: 15

  # 外観設定
  Appearance:
    customNameVisible: true
    glowing: true
    invisible: false

  # 物理設定
  Physics:
    hasGravity: true
    hasAI: false  # パケットエンティティではAI不要

  Skills:
    OnTimer:
      - name: ShootArrow
        interval: 60  # 3秒ごと
        targeter:
          type: NearestPlayer
          range: 30
        condition: 'target.distance >= 5 && target.distance <= 25'
        skills:
          - skill: ProjectileSkill
            meta:
              sync: false  # パケット送信は非同期OK

---

# 発光エフェクト付きMob
GlowingMob:
  Type: ZOMBIE
  Display: '&e&l発光ゾンビ'
  Health: 80

  Appearance:
    glowing: true
    customNameVisible: true

  Skills:
    OnTimer:
      # 発光状態を切り替える
      - name: ToggleGlow
        interval: 100
        targeter:
          type: Self
        skills:
          - skill: ToggleGlowSkill
            meta:
              sync: false

---

# 透明化Mob
InvisibleStalker:
  Type: ZOMBIE
  Display: '&7透明ストーカー'
  Health: 60

  Appearance:
    invisible: true
    customNameVisible: false

  Skills:
    OnTimer:
      # プレイヤーに近づくと可視化
      - name: RevealWhenClose
        interval: 20
        targeter:
          type: NearestPlayer
          range: 50
        condition: 'target.distance < 5'
        skills:
          - skill: BecomeVisibleSkill
            meta:
              sync: false

---

# 複数アニメーション使用例
AnimatedMob:
  Type: ZOMBIE
  Display: '&dアニメーションゾンビ'
  Health: 100

  Skills:
    OnTimer:
      # 様々なアニメーションを再生
      - name: PlayAnimations
        interval: 100
        targeter:
          type: Self
        skills:
          # 腕を振る
          - skill: SwingArmSkill
            meta:
              sync: false
              executeDelay: 0ms

          # ダメージアニメーション
          - skill: DamageAnimSkill
            meta:
              sync: false
              executeDelay: 1s

          # クリティカルヒット
          - skill: CriticalHitAnimSkill
            meta:
              sync: false
              executeDelay: 2s

---

# テレポート機能付きMob
TeleportingMob:
  Type: ENDERMAN
  Display: '&5テレポートエンダーマン'
  Health: 120

  Skills:
    OnTimer:
      # ランダムにテレポート
      - name: RandomTeleport
        interval: 200  # 10秒ごと
        targeter:
          type: Self
        condition: 'math.random() < 0.3'  # 30%の確率
        skills:
          - skill: RandomTeleportSkill
            meta:
              sync: false
              executeDelay: 0ms

    OnDamaged:
      # ダメージを受けたら逃げる
      - name: TeleportAway
        targeter:
          type: Self
        skills:
          - skill: TeleportAwaySkill
            meta:
              sync: false

---

# パフォーマンス最適化例
OptimizedMob:
  Type: ZOMBIE
  Display: '&a最適化ゾンビ'
  Health: 100

  # パケットエンティティの利点:
  # 1. サーバーエンティティリストに追加されない
  # 2. チャンクアンロード時の処理不要
  # 3. パスファインディング不要
  # 4. コリジョン計算不要
  # 5. 完全に非同期で動作可能

  Skills:
    OnTimer:
      - name: LightweightSkill
        interval: 20
        targeter:
          type: NearestPlayer
          range: 30
        skills:
          # すべて非同期で実行
          - skill: ParticleEffect
            meta:
              sync: false

          - skill: SoundEffect
            meta:
              sync: false

          - skill: VisualEffect
            meta:
              sync: false

---

# プレイヤー追跡Mob
PlayerTrackingMob:
  Type: ZOMBIE
  Display: '&c追跡ゾンビ'
  Health: 100

  Skills:
    OnTimer:
      # プレイヤーの方向を向く
      - name: LookAtPlayer
        interval: 5  # 0.25秒ごと
        targeter:
          type: NearestPlayer
          range: 30
        skills:
          - skill: LookAtTargetSkill
            meta:
              sync: false

      # プレイヤーに向かって移動
      - name: MoveToPlayer
        interval: 10  # 0.5秒ごと
        targeter:
          type: NearestPlayer
          range: 30
        condition: 'target.distance > 2 && target.distance < 20'
        skills:
          - skill: MoveTowardTargetSkill
            meta:
              sync: false

---

# パケットエンティティの注意点:
# 1. 実エンティティではないため、バニラの当たり判定なし
# 2. プレイヤーが攻撃しても自動検知されない（手動実装必要）
# 3. パスファインディングなし（移動は手動実装）
# 4. ワールドに保存されない（プラグイン管理）
# 5. PacketEventsが必要（現在はスタブ実装）

# パケットエンティティの利点:
# 1. 軽量・高パフォーマンス
# 2. 完全に非同期で制御可能
# 3. プレイヤーごとに表示制御可能
# 4. サーバーエンティティ数の制限を受けない
# 5. カスタマイズ性が高い